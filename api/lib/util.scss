@function -restyle--multiple-values($values...) {
  @return (
    '@restyle.multivalue': $values
  );
}

@function -restyle--map-merge-deep($destination, $source: ()){
  @if type-of($source) != map {
    @return $destination;
  }

  @each $key, $value in $source {
    // if the destination already has a a value, and the values are both maps...
    $current-value: map-get($destination, $key);
    @if ((type-of($current-value) == map) and (type-of($value) == map)) {
      // recursively merge the values
      $value: -restyle--map-merge-deep($current-value, $value);
    }

    // merge these values back into the destination
    $destination: map-merge($destination, (
      #{$key}: $value
    ));
  }

  @return $destination;
}

@function -restyle--is-logging-enabled($type) {
  @return -restyle--is-logging-enabled-js($type, -restyle--config(log));
}

@function -restyle--log($message, $type: null, $data: (), $severity: log) {
  // if a type is set, make sure the type logging is enabled
  @if ($type and not -restyle--is-logging-enabled($type)) {
    @return null;
  }

  // adjust the type
  $type: if($type, "restyle:#{$type}", "restyle");

  // adjust the message
  $message: "[#{$type}] #{-restyle--str-substitute-js($message, $data)}";

  // log based on severity
  @if ($severity == warn) {
    @warn $message;
  }
  @else if ($severity != silent) {
    @debug $message;
  }
  @return $message;
}
